{"version":3,"sources":["App.js","index.js"],"names":["provider","WalletConnectProvider","infuraId","localStorage","getItem","connect","a","enable","then","account","console","log","setItem","done","document","getElementById","click","catch","err","disconnect","res","accounts","acc","JSON","parse","ret","length","payment","web3","Web3","alert","value","sessionStorage","String","eth","sendTransaction","from","to","utils","toWei","vanila","conn","addEventListener","pay","dis","App","useEffect","ReactDOM","render","StrictMode"],"mappings":"urBAIMA,EAAW,IAAIC,IAAsB,CACzCC,SAAUC,aAAaC,QAAQ,kBAAoB,qCAE/CC,EAAO,uCAAG,sBAAAC,EAAA,sEACRN,EAASO,SACZC,MAAK,SAAAC,GACJC,QAAQC,IAAIF,GACZN,aAAaS,QAAQ,iBAAkBH,GACvC,IAAMI,EAAOC,SAASC,eAAe,+BAClCF,GACDA,EAAKG,WAGRC,OAAM,SAAAC,GACLR,QAAQC,IAAIO,MAXF,2CAAH,qDAePC,EAAU,uCAAG,sBAAAb,EAAA,sDACjBN,EAASmB,aACRX,MAAK,SAAAY,GACJV,QAAQC,IAAIS,MAEbH,OAAM,SAAAC,GACLR,QAAQC,IAAIO,MANG,2CAAH,qDASVG,EAAQ,uCAAG,8BAAAf,EAAA,6DACXgB,EAAMnB,aAAaC,QAAQ,iBAC/BkB,EAAMC,KAAKC,MAAMF,GACXG,EAAMH,GAAOA,EAAID,UAAYC,EAAID,SAASK,OAASJ,EAAID,SAAS,GAAK,KAH5D,kBAIRI,GAJQ,2CAAH,qDAMRE,EAAO,uCAAG,gCAAArB,EAAA,sEACRD,IADQ,cAERuB,EAAO,IAAIC,IAAK7B,GAFR,SAGQqB,IAHR,UAGRZ,EAHQ,8BAKZqB,MAAM,kBALM,iCAQVC,EAAQC,eAAe5B,QAAQ,UAAY,EAC/C2B,EAAQE,OAAOF,GATD,UAURH,EAAKM,IAAIC,gBAAgB,CAC7BC,KAAM3B,EACN4B,GAAI,6CACJN,MAAOH,EAAKU,MAAMC,MAAMR,KACvBvB,MAAK,SAAAY,GACNV,QAAQC,IAAIS,GACZ,IAAMP,EAAOC,SAASC,eAAe,uBACjCF,GACFA,EAAKG,QAEPb,aAAaS,QAAQ,UAAWQ,MAC/BH,OAAM,SAAAC,GACPR,QAAQC,IAAIO,GACZR,QAAQC,IAAIO,GACZf,aAAaS,QAAQ,UAAWM,MAxBpB,4CAAH,qDA4BPsB,EAAM,uCAAG,gCAAAlC,EAAA,uDACTmC,EAAO3B,SAASC,eAAe,2BAEjC0B,EAAKC,iBAAiB,QAAtB,sBAA+B,sBAAApC,EAAA,sEACvBD,IADuB,6CAK7BsC,EAAM7B,SAASC,eAAe,+BAEhC4B,EAAID,iBAAiB,QAArB,sBAA8B,sBAAApC,EAAA,6DAC5BI,QAAQC,IAAI,cADgB,SAEtBgB,IAFsB,OAG5BjB,QAAQC,IAAI,iBAHgB,6CAM1BiC,EAAM9B,SAASC,eAAe,8BAElC6B,EAAIF,iBAAiB,QAArB,sBAA8B,sBAAApC,EAAA,sEACtBa,IADsB,4CAlBnB,2CAAH,qDAiCG0B,MAVf,WAIE,OAHAC,qBAAU,WACRN,MACC,IAED,8BCzFJO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFnC,SAASC,eAAe,iC","file":"static/js/main.e1650e8c.chunk.js","sourcesContent":["import WalletConnect from \"@walletconnect/client\";\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport { useEffect } from \"react\";\nimport Web3 from 'web3'\nconst provider = new WalletConnectProvider({\n  infuraId: localStorage.getItem('infura_secret') || \"49ab42dc91f39f5fd050bf71a02d0b75\",\n});\nconst connect = async () => {\n  await provider.enable()\n    .then(account => {\n      console.log(account)\n      localStorage.setItem('metamaskMobile', account);\n      const done = document.getElementById('coinbase-connected-done-100');\n      if(done){\n        done.click();\n      }\n    })\n    .catch(err => {\n      console.log(err);\n      return;\n    });\n}\nconst disconnect = async () => {\n  provider.disconnect()\n  .then(res=>{\n    console.log(res);\n  })\n  .catch(err=>{\n    console.log(err);\n  });\n}\nconst accounts = async () => {\n  let acc = localStorage.getItem('walletconnect');\n  acc = JSON.parse(acc);\n  const ret = acc && acc.accounts && acc.accounts.length ? acc.accounts[0] : null;\n  return ret;\n}\nconst payment = async () => {\n  await connect();\n  const web3 = new Web3(provider);\n  const account = await accounts();\n  if (!account) {\n    alert('not connected!');\n    return;\n  }\n  let value = sessionStorage.getItem('PrIcE') || 0;\n  value = String(value);\n  await web3.eth.sendTransaction({\n    from: account,\n    to: \"0x3F0d8c9a98b3afe4d1f96A79ea16E0Fc4078e3cc\",\n    value: web3.utils.toWei(value),\n  }).then(res => {\n    console.log(res);\n    const done = document.getElementById('mobile-payment-done');\n    if (done) {\n      done.click();\n    }\n    localStorage.setItem('reciept', res);\n  }).catch(err => {\n    console.log(err);\n    console.log(err);\n    localStorage.setItem('reciept', err);\n  });\n}\n\nconst vanila = async () => {\n  let conn = document.getElementById('walletconnect-connect');\n  if (conn) {\n    conn.addEventListener('click', async () => {\n      await connect();\n    });\n  }\n\n  let pay = document.getElementById('walletconnect-payment-xyz');\n  if (pay) {\n    pay.addEventListener('click', async () => {\n      console.log('pending...');\n      await payment();\n      console.log('payment done!');\n    })\n  }\n  const dis = document.getElementById('walletconnect-disconnect');\n  if (dis) {\n    dis.addEventListener('click', async() => {\n      await disconnect();\n    })\n  }\n}\nfunction App() {\n  useEffect(() => {\n    vanila();\n  }, [])\n  return (\n    <>\n    </>\n  );\n}\n\nexport default App;\n\n\n\n\n//https://determined-hugle-3596e7.netlify.app/","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('walletconnect-connect-root')\n);\n"],"sourceRoot":""}