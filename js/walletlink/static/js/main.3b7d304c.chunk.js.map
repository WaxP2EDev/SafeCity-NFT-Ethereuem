{"version":3,"sources":["App.js","index.js"],"names":["connectCoinbase","ab","document","getElementById","addEventListener","a","APP_NAME","localStorage","getItem","APP_LOGO_URL","INFURA_ID","walletlink","WalletLink","appName","appLogoUrl","darkMode","console","log","makeWeb3Provider","coinbase","web3","Web3","send","then","accounts","eth","defaultAccount","setItem","cdd","click","paywithcoinbase","getAccounts","length","alert","clientcoinbase","value","sessionStorage","params","from","to","utils","toWei","String","sendTransaction","res","catch","err","abc","App","useEffect","ReactDOM","render","StrictMode"],"mappings":"unBAGMA,EAAkB,WACtB,IAAMC,EAAKC,SAASC,eAAe,2BAC9BF,GACLA,EAAGG,iBAAiB,QAApB,cAAAC,EAAA,MAA6B,sCAAAA,EAAA,6DACrBC,EAAWC,aAAaC,QAAQ,aAAe,WAC/CC,EAAeF,aAAaC,QAAQ,aAAe,KACnDE,EAAYH,aAAaC,QAAQ,cAAgB,8BACtC,EACXG,EAAa,IAAIC,IAAW,CAChCC,QAASP,EACTQ,WAAYL,EACZM,UAAU,IAEZC,QAAQC,IAAIN,GAVe,SAWJA,EAAWO,iBAAiBR,EAPlC,GAJU,cAWrBS,EAXqB,OAYrBC,EAAO,IAAIC,IAAKF,GAZK,UAarBA,EAASG,KAAK,uBAAuBC,MAAK,SAACC,GAC/CJ,EAAKK,IAAIC,eAAiBF,EAAS,GACnCjB,aAAaoB,QAAQ,WAAYH,EAAS,IAC1C,IAAMI,EAAM1B,SAASC,eAAe,+BAChCyB,EACFA,EAAIC,QAGJb,QAAQC,IAAI,gBArBW,8CA2BzBa,EAAe,uCAAG,4BAAAzB,EAAA,yDAChBJ,EAAKC,SAASC,eAAe,4BADb,iDAGtBF,EAAGG,iBAAiB,QAApB,cAAAC,EAAA,MAA6B,8CAAAA,EAAA,6DACrBC,EAAWC,aAAaC,QAAQ,aAAe,WAC/CC,EAAeF,aAAaC,QAAQ,aAAe,KACnDE,EAAYH,aAAaC,QAAQ,cAAgB,8BACtC,EACXG,EAAa,IAAIC,IAAW,CAChCC,QAASP,EACTQ,WAAYL,EACZM,UAAU,IARe,SAUJJ,EAAWO,iBAAiBR,EANlC,GAJU,cAUrBS,EAVqB,OAWrBC,EAAO,IAAIC,IAAKF,GAXK,UAYJC,EAAKK,IAAIM,cAZL,WAaH,KADlBP,EAZqB,QAadQ,OAbc,wBAczBC,MAAM,2BAdmB,2BAiBrBC,EAAiB3B,aAAaC,QAAQ,uBAAyB,6CAC/D2B,EAAQC,eAAe5B,QAAQ,UAAY,EAC3C6B,EAAS,CACbC,KAAMd,EAAS,GACfe,GAAIL,EACJC,MAAOf,EAAKoB,MAAMC,MAAMC,OAAOP,GAAQ,UAEzCf,EAAKK,IAAIkB,gBAAT,eACKN,IAEFd,MAAK,SAAAqB,GACJR,eAAeT,QAAQ,UAAWiB,GAClC5B,QAAQC,IAAI2B,GACZ,IAAM3C,EAAKC,SAASC,eAAe,6BAC/BF,EACFA,EAAG4B,QAGHb,QAAQC,IAAI,yBAGf4B,OAAM,SAAAC,GACLV,eAAeT,QAAQ,UAAWmB,GAClC,IAAMC,EAAM7C,SAASC,eAAe,6BAChC4C,GACFA,EAAIlB,WA1CiB,6CAHP,2CAAH,qDAiENmB,MAbf,WAKE,OAJAC,oBAAS,sBAAC,sBAAA5C,EAAA,sDACRL,IACA8B,IAFQ,2CAGP,IAED,8BCxFJoB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFlD,SAASC,eAAe,uB","file":"static/js/main.3b7d304c.chunk.js","sourcesContent":["import { useEffect } from \"react\";\nimport WalletLink from \"walletlink\";\nimport Web3 from \"web3\";\nconst connectCoinbase = () => {\n  const ab = document.getElementById('coinbase-connect-button');\n  if (!ab) return;\n  ab.addEventListener('click', async () => {\n    const APP_NAME = localStorage.getItem('APP_NAME') || 'SAFE DEV';\n    const APP_LOGO_URL = localStorage.getItem('APP_LOGO') || null;\n    const INFURA_ID = localStorage.getItem('infura_id') || '1ulrdi6aaxKzc3foLRSnldMoojg';\n    const CHAIN_ID = 1;\n    const walletlink = new WalletLink({\n      appName: APP_NAME,\n      appLogoUrl: APP_LOGO_URL,\n      darkMode: false,\n    });\n    console.log(walletlink)\n    const coinbase = await walletlink.makeWeb3Provider(INFURA_ID, CHAIN_ID);\n    const web3 = new Web3(coinbase);\n    await coinbase.send('eth_requestAccounts').then((accounts) => {\n      web3.eth.defaultAccount = accounts[0];\n      localStorage.setItem('coinbase', accounts[0]);\n      const cdd = document.getElementById('coinbase-connected-done-100');\n      if (cdd) {\n        cdd.click();\n      }\n      else {\n        console.log('connected');\n      }\n    });\n\n  })\n}\nconst paywithcoinbase = async () => {\n  const ab = document.getElementById('pay-with-coinbase-button');\n  if (!ab) return;\n  ab.addEventListener('click', async () => {\n    const APP_NAME = localStorage.getItem('APP_NAME') || 'SAFE DEV';\n    const APP_LOGO_URL = localStorage.getItem('APP_LOGO') || null;\n    const INFURA_ID = localStorage.getItem('infura_id') || '1ulrdi6aaxKzc3foLRSnldMoojg';\n    const CHAIN_ID = 1;\n    const walletlink = new WalletLink({\n      appName: APP_NAME,\n      appLogoUrl: APP_LOGO_URL,\n      darkMode: false,\n    });\n    const coinbase = await walletlink.makeWeb3Provider(INFURA_ID, CHAIN_ID);\n    const web3 = new Web3(coinbase);\n    const accounts = await web3.eth.getAccounts();\n    if (accounts.length === 0) {\n      alert('connect a wallet please');\n      return;\n    }\n    const clientcoinbase = localStorage.getItem('CLIENT_COINBASE_ID') || '0x855be90412ee4841a337a6c759c74ba810e4345f';\n    const value = sessionStorage.getItem('PrIcE') || 1;\n    const params = {\n      from: accounts[0],\n      to: clientcoinbase,\n      value: web3.utils.toWei(String(value), 'ether'),\n    }\n    web3.eth.sendTransaction({\n      ...params\n    })\n      .then(res => {\n        sessionStorage.setItem('reciept', res);\n        console.log(res);\n        const ab = document.getElementById('coinbase-payment-done-100');\n        if (ab) {\n          ab.click();\n        }\n        else {\n          console.log('something is wrong');\n        }\n      })\n      .catch(err => {\n        sessionStorage.setItem('reciept', err);\n        const abc = document.getElementById('coinbase-payment-canceled');\n        if (abc) {\n          abc.click();\n        }\n      });\n\n  })\n}\n\nfunction App() {\n  useEffect(async () => {\n    connectCoinbase();\n    paywithcoinbase();\n  }, [])\n  return (\n    <>\n     \n\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('coinbase-connect')\n);\n\n"],"sourceRoot":""}